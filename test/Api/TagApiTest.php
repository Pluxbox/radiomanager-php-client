<?php
/**
 * TagApiTest
 * PHP version 5
 *
 * @category Class
 * @package  RadioManager
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Pluxbox Radiomanager Client
 *
 * Pluxbox RadioManager gives you the power, flexibility and speed you always wanted in a lightweight and easy-to-use web-based radio solution. With Pluxbox RadioManager you can organise your radio workflow and automate your omnichannel communication with your listeners. We offer wide range specialised services for the radio and connections like Hybrid Radio, Visual Radio, your website and social media without losing focus on your broadcast. For more information visit https://pluxbox.com
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace RadioManager;

use \RadioManager\Configuration;
use \RadioManager\ApiClient;
use \RadioManager\ApiException;
use \RadioManager\ObjectSerializer;

/**
 * TagApiTest Class Doc Comment
 *
 * @category Class
 * @package  RadioManager
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TagApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createTag
     *
     * Create tag..
     *
     */
    public function testCreateTag()
    {
    }

    /**
     * Test case for deleteTagById
     *
     * Delete tag by id.
     *
     */
    public function testDeleteTagById()
    {
    }

    /**
     * Test case for getTagById
     *
     * Get tags by id.
     *
     */
    public function testGetTagById()
    {
    }

    /**
     * Test case for listTags
     *
     * Get a list of all the tags currently in your station..
     *
     */
    public function testListTags()
    {
    }

    /**
     * Test case for updateTagByID
     *
     * Update tag by id.
     *
     */
    public function testUpdateTagByID()
    {
    }
}
