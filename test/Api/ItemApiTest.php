<?php
/**
 * ItemApiTest
 * PHP version 5
 *
 * @category Class
 * @package  RadioManager
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Pluxbox Radiomanager Client
 *
 * Pluxbox RadioManager gives you the power, flexibility and speed you always wanted in a lightweight and easy-to-use web-based radio solution. With Pluxbox RadioManager you can organise your radio workflow and automate your omnichannel communication with your listeners. We offer wide range specialised services for the radio and connections like Hybrid Radio, Visual Radio, your website and social media without losing focus on your broadcast. For more information visit https://pluxbox.com
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace RadioManager;

use \RadioManager\Configuration;
use \RadioManager\ApiClient;
use \RadioManager\ApiException;
use \RadioManager\ObjectSerializer;

/**
 * ItemApiTest Class Doc Comment
 *
 * @category Class
 * @package  RadioManager
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ItemApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createItem
     *
     * Create an new item..
     *
     */
    public function testCreateItem()
    {
    }

    /**
     * Test case for currentItemPostStructure
     *
     * Post a current playing item, keep structure.
     *
     */
    public function testCurrentItemPostStructure()
    {
    }

    /**
     * Test case for currentItemPostTiming
     *
     * Post a current playing item.
     *
     */
    public function testCurrentItemPostTiming()
    {
    }

    /**
     * Test case for deleteItemById
     *
     * Delete item by ID..
     *
     */
    public function testDeleteItemById()
    {
    }

    /**
     * Test case for getItemById
     *
     * Get extended item details by ID..
     *
     */
    public function testGetItemById()
    {
    }

    /**
     * Test case for listItems
     *
     * Get a list of all the items currently in your station..
     *
     */
    public function testListItems()
    {
    }

    /**
     * Test case for playlistPostStructure
     *
     * Post a playlist, keep current structure.
     *
     */
    public function testPlaylistPostStructure()
    {
    }

    /**
     * Test case for playlistPostTiming
     *
     * Post a playlist.
     *
     */
    public function testPlaylistPostTiming()
    {
    }

    /**
     * Test case for updateItemById
     *
     * Update extended item details by ID..
     *
     */
    public function testUpdateItemById()
    {
    }
}
